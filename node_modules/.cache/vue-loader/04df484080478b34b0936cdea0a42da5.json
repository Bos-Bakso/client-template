{"remainingRequest":"/home/rizkyich/infinitefox-phase3/final-project/client-template/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/rizkyich/infinitefox-phase3/final-project/client-template/src/components/Chart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/rizkyich/infinitefox-phase3/final-project/client-template/src/components/Chart.vue","mtime":1574233383266},{"path":"/home/rizkyich/infinitefox-phase3/final-project/client-template/node_modules/cache-loader/dist/cjs.js","mtime":1574233368518},{"path":"/home/rizkyich/infinitefox-phase3/final-project/client-template/node_modules/babel-loader/lib/index.js","mtime":1574233368286},{"path":"/home/rizkyich/infinitefox-phase3/final-project/client-template/node_modules/cache-loader/dist/cjs.js","mtime":1574233368518},{"path":"/home/rizkyich/infinitefox-phase3/final-project/client-template/node_modules/vue-loader/lib/index.js","mtime":1574233380942}],"contextDependencies":[],"result":["\nimport { Line } from \"vue-chartjs\";\nexport default {\n  extends: Line,\n  data: () => ({\n    props: [\"penjualanDat\"],\n    dataSale: { foo: \"bar\" },\n    salesData: {}\n  }),\n  methods: {\n    convert(str) {\n      var date = new Date(str),\n        mnth = (\"0\" + (date.getMonth() + 1)).slice(-2);\n      switch (mnth) {\n        case \"01\":\n          return \"January\";\n          break;\n        case \"02\":\n          return \"February\";\n          break;\n        case \"03\":\n          return \"March\";\n          break;\n        case \"04\":\n          return \"April\";\n          break;\n        case \"05\":\n          return \"May\";\n          break;\n        case \"06\":\n          return \"June\";\n          break;\n        case \"07\":\n          return \"July\";\n          break;\n        case \"08\":\n          return \"August\";\n          break;\n        case \"09\":\n          return \"September\";\n          break;\n        case \"10\":\n          return \"October\";\n          break;\n        case \"11\":\n          return \"November\";\n          break;\n        case \"12\":\n          return \"December\";\n          break;\n        default:\n          break;\n      }\n    },\n    fetchSales() {\n      this.$store.dispatch(\"getTransactions\").then(data => {\n        let penjualan = data.penjualanBakso;\n        let obj = {};\n        penjualan.forEach(jual => {\n          const month = this.convert(jual.date);\n          if (month) {\n            if (!obj[month]) obj[month] = 1;\n            else obj[month]++;\n          }\n        });\n        this.salesData = obj;\n        this.generateChart();\n      });\n    },\n    generateChart() {\n      this.renderChart(\n        {\n          labels: [\n            \"January\",\n            \"February\",\n            \"March\",\n            \"April\",\n            \"May\",\n            \"June\",\n            \"July\",\n            \"August\",\n            \"September\",\n            \"October\",\n            \"November\",\n            \"December\"\n          ],\n          datasets: [\n            {\n              label: \"2019\",\n              data: [\n                this.salesData[\"January\"],\n                this.salesData[\"February\"],\n                this.salesData[\"March\"],\n                this.salesData[\"April\"],\n                this.salesData[\"May\"],\n                this.salesData[\"June\"],\n                this.salesData[\"July\"],\n                this.salesData[\"August\"],\n                this.salesData[\"September\"],\n                this.salesData[\"October\"],\n                this.salesData[\"November\"],\n    \n              ],\n              backgroundColor: [\n                \"rgba(71, 183,132,.3)\" // Green\n              ],\n              borderColor: [\"#47b784\"],\n              hoverBackgroundColor: \"red\"\n            }\n          ]\n        },\n        {\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            yAxes: [\n              {\n                ticks: {\n                  beginAtZero: true,\n                  stepSize: 20\n                }\n              }\n            ]\n          },\n          tooltips: {\n            custom: function(tooltip) {\n              if (!tooltip) return;\n              // disable displaying the color box;\n              tooltip.displayColors = false;\n            },\n            callbacks: {\n              label: function(tooltipItem, data) {\n                var label = \"IDR\";\n                if (label) {\n                  label += \": \";\n                }\n                let duit = (Math.round(tooltipItem.yLabel * 100) / 100) * 15000;\n                label += duit.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\n                return label;\n              }\n            }\n          }\n        }\n      );\n    }\n  },\n  mounted() {\n    this.fetchSales();\n  },\n  created() {}\n};\n",{"version":3,"sources":["Chart.vue"],"names":[],"mappingsfile":"Chart.vue","sourceRoot":"src/components","sourcesContent":["<script>\nimport { Line } from \"vue-chartjs\";\nexport default {\n  extends: Line,\n  data: () => ({\n    props: [\"penjualanDat\"],\n    dataSale: { foo: \"bar\" },\n    salesData: {}\n  }),\n  methods: {\n    convert(str) {\n      var date = new Date(str),\n        mnth = (\"0\" + (date.getMonth() + 1)).slice(-2);\n      switch (mnth) {\n        case \"01\":\n          return \"January\";\n          break;\n        case \"02\":\n          return \"February\";\n          break;\n        case \"03\":\n          return \"March\";\n          break;\n        case \"04\":\n          return \"April\";\n          break;\n        case \"05\":\n          return \"May\";\n          break;\n        case \"06\":\n          return \"June\";\n          break;\n        case \"07\":\n          return \"July\";\n          break;\n        case \"08\":\n          return \"August\";\n          break;\n        case \"09\":\n          return \"September\";\n          break;\n        case \"10\":\n          return \"October\";\n          break;\n        case \"11\":\n          return \"November\";\n          break;\n        case \"12\":\n          return \"December\";\n          break;\n        default:\n          break;\n      }\n    },\n    fetchSales() {\n      this.$store.dispatch(\"getTransactions\").then(data => {\n        let penjualan = data.penjualanBakso;\n        let obj = {};\n        penjualan.forEach(jual => {\n          const month = this.convert(jual.date);\n          if (month) {\n            if (!obj[month]) obj[month] = 1;\n            else obj[month]++;\n          }\n        });\n        this.salesData = obj;\n        this.generateChart();\n      });\n    },\n    generateChart() {\n      this.renderChart(\n        {\n          labels: [\n            \"January\",\n            \"February\",\n            \"March\",\n            \"April\",\n            \"May\",\n            \"June\",\n            \"July\",\n            \"August\",\n            \"September\",\n            \"October\",\n            \"November\",\n            \"December\"\n          ],\n          datasets: [\n            {\n              label: \"2019\",\n              data: [\n                this.salesData[\"January\"],\n                this.salesData[\"February\"],\n                this.salesData[\"March\"],\n                this.salesData[\"April\"],\n                this.salesData[\"May\"],\n                this.salesData[\"June\"],\n                this.salesData[\"July\"],\n                this.salesData[\"August\"],\n                this.salesData[\"September\"],\n                this.salesData[\"October\"],\n                this.salesData[\"November\"],\n    \n              ],\n              backgroundColor: [\n                \"rgba(71, 183,132,.3)\" // Green\n              ],\n              borderColor: [\"#47b784\"],\n              hoverBackgroundColor: \"red\"\n            }\n          ]\n        },\n        {\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            yAxes: [\n              {\n                ticks: {\n                  beginAtZero: true,\n                  stepSize: 20\n                }\n              }\n            ]\n          },\n          tooltips: {\n            custom: function(tooltip) {\n              if (!tooltip) return;\n              // disable displaying the color box;\n              tooltip.displayColors = false;\n            },\n            callbacks: {\n              label: function(tooltipItem, data) {\n                var label = \"IDR\";\n                if (label) {\n                  label += \": \";\n                }\n                let duit = (Math.round(tooltipItem.yLabel * 100) / 100) * 15000;\n                label += duit.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\n                return label;\n              }\n            }\n          }\n        }\n      );\n    }\n  },\n  mounted() {\n    this.fetchSales();\n  },\n  created() {}\n};\n</script>\n\n<style>\n</style>"]}]}