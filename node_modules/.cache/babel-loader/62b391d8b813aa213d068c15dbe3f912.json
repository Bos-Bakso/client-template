{"remainingRequest":"/home/rizkyich/infinitefox-phase3/final-project/client-template/node_modules/babel-loader/lib/index.js!/home/rizkyich/infinitefox-phase3/final-project/client-template/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/rizkyich/infinitefox-phase3/final-project/client-template/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/rizkyich/infinitefox-phase3/final-project/client-template/src/components/Chart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/rizkyich/infinitefox-phase3/final-project/client-template/src/components/Chart.vue","mtime":1574233383266},{"path":"/home/rizkyich/infinitefox-phase3/final-project/client-template/node_modules/cache-loader/dist/cjs.js","mtime":1574233368518},{"path":"/home/rizkyich/infinitefox-phase3/final-project/client-template/node_modules/babel-loader/lib/index.js","mtime":1574233368286},{"path":"/home/rizkyich/infinitefox-phase3/final-project/client-template/node_modules/cache-loader/dist/cjs.js","mtime":1574233368518},{"path":"/home/rizkyich/infinitefox-phase3/final-project/client-template/node_modules/vue-loader/lib/index.js","mtime":1574233380942}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport { Line } from \"vue-chartjs\";\nexport default {\n  extends: Line,\n  data: function data() {\n    return {\n      props: [\"penjualanDat\"],\n      dataSale: {\n        foo: \"bar\"\n      },\n      salesData: {}\n    };\n  },\n  methods: {\n    convert: function convert(str) {\n      var date = new Date(str),\n          mnth = (\"0\" + (date.getMonth() + 1)).slice(-2);\n\n      switch (mnth) {\n        case \"01\":\n          return \"January\";\n          break;\n\n        case \"02\":\n          return \"February\";\n          break;\n\n        case \"03\":\n          return \"March\";\n          break;\n\n        case \"04\":\n          return \"April\";\n          break;\n\n        case \"05\":\n          return \"May\";\n          break;\n\n        case \"06\":\n          return \"June\";\n          break;\n\n        case \"07\":\n          return \"July\";\n          break;\n\n        case \"08\":\n          return \"August\";\n          break;\n\n        case \"09\":\n          return \"September\";\n          break;\n\n        case \"10\":\n          return \"October\";\n          break;\n\n        case \"11\":\n          return \"November\";\n          break;\n\n        case \"12\":\n          return \"December\";\n          break;\n\n        default:\n          break;\n      }\n    },\n    fetchSales: function fetchSales() {\n      var _this = this;\n\n      this.$store.dispatch(\"getTransactions\").then(function (data) {\n        var penjualan = data.penjualanBakso;\n        var obj = {};\n        penjualan.forEach(function (jual) {\n          var month = _this.convert(jual.date);\n\n          if (month) {\n            if (!obj[month]) obj[month] = 1;else obj[month]++;\n          }\n        });\n        _this.salesData = obj;\n\n        _this.generateChart();\n      });\n    },\n    generateChart: function generateChart() {\n      this.renderChart({\n        labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n        datasets: [{\n          label: \"2019\",\n          data: [this.salesData[\"January\"], this.salesData[\"February\"], this.salesData[\"March\"], this.salesData[\"April\"], this.salesData[\"May\"], this.salesData[\"June\"], this.salesData[\"July\"], this.salesData[\"August\"], this.salesData[\"September\"], this.salesData[\"October\"], this.salesData[\"November\"]],\n          backgroundColor: [\"rgba(71, 183,132,.3)\" // Green\n          ],\n          borderColor: [\"#47b784\"],\n          hoverBackgroundColor: \"red\"\n        }]\n      }, {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n              stepSize: 20\n            }\n          }]\n        },\n        tooltips: {\n          custom: function custom(tooltip) {\n            if (!tooltip) return; // disable displaying the color box;\n\n            tooltip.displayColors = false;\n          },\n          callbacks: {\n            label: function label(tooltipItem, data) {\n              var label = \"IDR\";\n\n              if (label) {\n                label += \": \";\n              }\n\n              var duit = Math.round(tooltipItem.yLabel * 100) / 100 * 15000;\n              label += duit.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\n              return label;\n            }\n          }\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.fetchSales();\n  },\n  created: function created() {}\n};",{"version":3,"sources":["Chart.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\nimport { Line } from \"vue-chartjs\";\nexport default {\n  extends: Line,\n  data: () => ({\n    props: [\"penjualanDat\"],\n    dataSale: { foo: \"bar\" },\n    salesData: {}\n  }),\n  methods: {\n    convert(str) {\n      var date = new Date(str),\n        mnth = (\"0\" + (date.getMonth() + 1)).slice(-2);\n      switch (mnth) {\n        case \"01\":\n          return \"January\";\n          break;\n        case \"02\":\n          return \"February\";\n          break;\n        case \"03\":\n          return \"March\";\n          break;\n        case \"04\":\n          return \"April\";\n          break;\n        case \"05\":\n          return \"May\";\n          break;\n        case \"06\":\n          return \"June\";\n          break;\n        case \"07\":\n          return \"July\";\n          break;\n        case \"08\":\n          return \"August\";\n          break;\n        case \"09\":\n          return \"September\";\n          break;\n        case \"10\":\n          return \"October\";\n          break;\n        case \"11\":\n          return \"November\";\n          break;\n        case \"12\":\n          return \"December\";\n          break;\n        default:\n          break;\n      }\n    },\n    fetchSales() {\n      this.$store.dispatch(\"getTransactions\").then(data => {\n        let penjualan = data.penjualanBakso;\n        let obj = {};\n        penjualan.forEach(jual => {\n          const month = this.convert(jual.date);\n          if (month) {\n            if (!obj[month]) obj[month] = 1;\n            else obj[month]++;\n          }\n        });\n        this.salesData = obj;\n        this.generateChart();\n      });\n    },\n    generateChart() {\n      this.renderChart(\n        {\n          labels: [\n            \"January\",\n            \"February\",\n            \"March\",\n            \"April\",\n            \"May\",\n            \"June\",\n            \"July\",\n            \"August\",\n            \"September\",\n            \"October\",\n            \"November\",\n            \"December\"\n          ],\n          datasets: [\n            {\n              label: \"2019\",\n              data: [\n                this.salesData[\"January\"],\n                this.salesData[\"February\"],\n                this.salesData[\"March\"],\n                this.salesData[\"April\"],\n                this.salesData[\"May\"],\n                this.salesData[\"June\"],\n                this.salesData[\"July\"],\n                this.salesData[\"August\"],\n                this.salesData[\"September\"],\n                this.salesData[\"October\"],\n                this.salesData[\"November\"],\n    \n              ],\n              backgroundColor: [\n                \"rgba(71, 183,132,.3)\" // Green\n              ],\n              borderColor: [\"#47b784\"],\n              hoverBackgroundColor: \"red\"\n            }\n          ]\n        },\n        {\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            yAxes: [\n              {\n                ticks: {\n                  beginAtZero: true,\n                  stepSize: 20\n                }\n              }\n            ]\n          },\n          tooltips: {\n            custom: function(tooltip) {\n              if (!tooltip) return;\n              // disable displaying the color box;\n              tooltip.displayColors = false;\n            },\n            callbacks: {\n              label: function(tooltipItem, data) {\n                var label = \"IDR\";\n                if (label) {\n                  label += \": \";\n                }\n                let duit = (Math.round(tooltipItem.yLabel * 100) / 100) * 15000;\n                label += duit.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, \"$&,\");\n                return label;\n              }\n            }\n          }\n        }\n      );\n    }\n  },\n  mounted() {\n    this.fetchSales();\n  },\n  created() {}\n};\n</script>\n\n<style>\n</style>"],"sourceRoot":"src/components"}]}